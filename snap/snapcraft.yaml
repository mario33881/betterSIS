name: bettersis
version: git
base: core20

architectures:
  - build-on: amd64  # SIS was compiled for 64 bit CPUs

summary: The modern shell for SIS (the circuit simulator and optimizer)
description: |
  Bettersis, or bsis for short, is an **interactive shell**
  that allows you to **control SIS** (the tool for synthesis and optimization of sequential circuits)
  more easily than its default shell thanks to modern features such as:
  * command **autocompletion**
  * command **history**
  * command **suggestions**
  > **Disclaimer:** I'm not affiliated with the SIS developers in any way.
  You can read more about betterSIS here: https://github.com/mario33881/betterSIS

grade: stable
confinement: strict  # block everything but the things specified as "plugs"


parts:
  # dump the content of the deb package in the snap
  sis:
    plugin: dump
    source: https://github.com/JackHack96/logic-synthesis/releases/download/1.3.6/sis_1.3.6-1_amd64.deb
    source-type: deb

  # use the setup.py file to install the python app
  bettersis:
    plugin: python
    source: .

  # install graphviz and its dependencies
  graphviz:
    plugin: autotools
    source: https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/7.0.4/graphviz-7.0.4.tar.gz
    build-packages:
      - graphviz
      - libgvc6
      - libxau6
      - libxrender1
      - libxext6
      - freeglut3-dev
      - libgts-dev
      - swig
      - libgtkglext1-dev
      - libglade2-dev
      - libqt5gui5
      - qt5-qmake
      - qt5-default
      - libann-dev
      - libdevil-dev
      - libgd-dev
      - ghostscript
      - libgs-dev
      - liblasi-dev
      - libpoppler-dev
      - libpoppler-glib-dev
      - librsvg2-dev
      - libwebp-dev
      - fonts-freefont-ttf
      - fontconfig-config
      - pkg-config
      - libfontconfig
      - libperl-dev
    stage-packages:
      - graphviz
    
    # build graphviz and then create and save the config6 file containing plugin configs
    # > fixes the 'There is no layout engine support for "dot"' errpr
    override-build: |
      snapcraftctl build
      find / -iname config6 || true
      $SNAPCRAFT_PART_INSTALL/usr/bin/dot -c
      find / -iname config6 || true
      cat /usr/lib/x86_64-linux-gnu/graphviz/config6a || echo "config6 not found"
      echo "Copying /usr/lib/x86_64-linux-gnu/graphviz/config6a to $SNAPCRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/graphviz/config6a..."
      cp /usr/lib/x86_64-linux-gnu/graphviz/config6a $SNAPCRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/graphviz/config6a


apps:
  sis:
    command: usr/local/bin/sis  # this is where the dump plugin puts the executable
    plugs:
      - home                    # the app reads and writes blif files
      - removable-media         # (disabled by default) the app reads and writes blif files in USBs, /mnt/, ...

  bettersis:
    command: bin/bettersis  # setup.py contains entry point that creates this executable
    environment:
      LANG: C.UTF-8         # needed for the logo / ASCII art
      LC_ALL: C.UTF-8       # needed for the logo / ASCII art
    plugs:
      - network             # the app checks if new versions are available
      - home                # the app reads and writes blif files
      - desktop             # used to open the web browser to open tutorials, release page, ...
      - removable-media     # (disabled by default) the app reads and writes blif files in USBs, /mnt/, ...

  dot:
    command: usr/local/bin/dot
    plugs:
    - desktop     # used to access font files
    - home        # used to read/write input/output files


# these bindings allow sis to find files
# like *.genlib files, script.rugged, ...

layout:
  /usr/share/doc/sis:
    bind: $SNAP/usr/share/doc/sis

  /usr/local/bin:
    bind: $SNAP/usr/local/bin

  /usr/local/include/sis:
    bind: $SNAP/usr/local/include/sis

  /usr/local/lib:
    bind: $SNAP/usr/local/lib

  /usr/local/man:
    bind: $SNAP/usr/local/man

  /usr/local/share/sis:
    bind: $SNAP/usr/local/share/sis
